# Comprehensive rate limiting test
# This file contains the specific rate limiting policies needed to match the expected output

# Gateway section-specific rate limiting policy
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: ratelimit-gateway-section
  namespace: infra
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: example-gateway
    sectionName: http1
  rateLimit:
    global:
      descriptors:
      - entries:
        - type: Header
          header: "X-User-ID"
      extensionRef:
        name: section-name-gw-ratelimit
---
# Global-only rate limiting for specific route
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: ratelimit-global-only
  namespace: infra
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: example-route
  rateLimit:
    global:
      descriptors:
      - entries:
        - type: Path
      extensionRef:
        name: basic-ratelimit
---
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: ratelimit-path
  namespace: infra
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: example-route-no-ratelimit
  rateLimit:
    global:
      descriptors:
      - entries:
        - type: Generic
          generic:
            key: "service_tier"
            value: "premium"
      extensionRef: 
        name: basic-ratelimit
---
# Multiple descriptors (OR logic)
# Any descriptor match will trigger rate limiting
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: ratelimit-combined-or
  namespace: infra
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: example-tls-sibling-route
  rateLimit:
    global:
      descriptors:
      - entries:
        - type: Header
          header: "X-User-Type"
      - entries:
        - type: Path
      - entries:
        - type: Generic
          generic:
            key: "rate_limit_bypass"
            value: "false"
      extensionRef: 
        name: basic-ratelimit
---
# Complex multi-dimensional rate limiting
# Different rate limits for different user tiers and endpoints
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: ratelimit-multi-dimensional
  namespace: infra
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: example-gateway
    sectionName: tls1
  rateLimit:
    global:
      descriptors:
      # Premium users get higher limits
      - entries:
        - type: Header
          header: "X-User-Tier"
        - type: Generic
          generic:
            key: "endpoint_type"
            value: "api"
      # IP-based fallback for unauthenticated requests
      - entries:
        - type: RemoteAddress
        - type: Path
      # Service-to-service communication
      - entries:
        - type: Header
          header: "X-Service-Auth"
        - type: Generic
          generic:
            key: "traffic_type"
            value: "internal"
      extensionRef:
        name: section-name-gw-ratelimit
---
# Fail open behavior (allows requests when rate limit service is unavailable)
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: ratelimit-fail-open
  namespace: infra
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: example-gateway
    sectionName: tls2
  rateLimit:
    global:
      descriptors:
      - entries:
        - type: RemoteAddress
      extensionRef:
        name: fail-open-ratelimit
---
# Combined local and global rate limiting
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: ratelimit-local-and-global
  namespace: infra
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: example-tls-route-no-ratelimit
  rateLimit:
    local:
      tokenBucket:
        maxTokens: 5
        tokensPerFill: 1
        fillInterval: "1s"
    global:
      descriptors:
      - entries:
        - type: Header
          header: "X-User-Type"
      extensionRef:
        name: basic-ratelimit
---
# Multiple header descriptors in one rule
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: ratelimit-multi-headers
  namespace: infra
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: example-gateway
    sectionName: http2
  rateLimit:
    global:
      descriptors:
      - entries:
        - type: Header
          header: "X-User-ID"
        - type: Header
          header: "X-API-Version"
        - type: Header
          header: "X-Client-Type"
      extensionRef:
        name: basic-gw-ratelimit
---
# Filter-level rate limiting via ExtensionRef (no targetRef needed)
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: ratelimit-for-extension-ref
  namespace: infra
spec:
  rateLimit:
    global:
      descriptors:
      - entries:
        - type: Header
          header: "X-Filter-ID"
      extensionRef: 
        name: basic-ratelimit
---
# Route section-specific rate limiting
apiVersion: gateway.kgateway.dev/v1alpha1
kind: TrafficPolicy
metadata:
  name: ratelimit-for-route-section-name
  namespace: infra
spec:
  targetRefs:
  - group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: example-tls-route-extension-ref
    sectionName: route-name
  rateLimit:
    global:
      descriptors:
      - entries:
        - type: Generic
          generic:
            key: "section_specific"
            value: "true"
        - type: Header
          header: "X-API-Key"
        - type: RemoteAddress
      extensionRef: 
        name: basic-ratelimit