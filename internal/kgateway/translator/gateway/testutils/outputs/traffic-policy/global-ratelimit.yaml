Clusters:
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_infra_example-svc_80
  type: EDS
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_infra_ratelimit_8081
  type: EDS
  typedExtensionProtocolOptions:
    envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
      '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
      explicitHttpConfig:
        http2ProtocolOptions: {}
- connectTimeout: 5s
  metadata: {}
  name: test-backend-plugin_default_example-svc_80
Listeners:
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 443
  metadata:
    filterMetadata:
      merge.TrafficPolicy.gateway.kgateway.dev:
        rateLimit.global:
        - gateway.kgateway.dev/TrafficPolicy/infra/ratelimit-remote-address
  name: listener~443
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 80
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - name: ratelimit/infra/basic-gw-ratelimit
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
            domain: api-gateway
            enableXRatelimitHeaders: DRAFT_VERSION_03
            failureModeDeny: true
            rateLimitService:
              grpcService:
                envoyGrpc:
                  clusterName: kube_infra_ratelimit_8081
              transportApiVersion: V3
            requestType: both
            statPrefix: http_rate_limit
            timeout: 0.100s
        - name: ratelimit/infra/basic-ratelimit
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
            domain: api-gateway-routes
            enableXRatelimitHeaders: DRAFT_VERSION_03
            failureModeDeny: true
            rateLimitService:
              grpcService:
                envoyGrpc:
                  clusterName: kube_infra_ratelimit_8081
              transportApiVersion: V3
            requestType: both
            statPrefix: http_rate_limit
            timeout: 0.150s
        - name: ratelimit/infra/section-name-gw-ratelimit
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
            domain: api-gateway-section
            enableXRatelimitHeaders: DRAFT_VERSION_03
            failureModeDeny: true
            rateLimitService:
              grpcService:
                envoyGrpc:
                  clusterName: kube_infra_ratelimit_8081
              transportApiVersion: V3
            requestType: both
            statPrefix: http_rate_limit
            timeout: 0.200s
        - disabled: true
          name: ratelimit/local
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
            statPrefix: http_local_rate_limiter
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~80
        statPrefix: http
        useRemoteAddress: true
    name: listener~80
  metadata:
    filterMetadata:
      merge.TrafficPolicy.gateway.kgateway.dev:
        rateLimit.global:
        - gateway.kgateway.dev/TrafficPolicy/infra/ratelimit-remote-address
  name: listener~80
Routes:
- ignorePortInHostMatching: true
  metadata:
    filterMetadata:
      merge.TrafficPolicy.gateway.kgateway.dev:
        rateLimit.global:
        - gateway.kgateway.dev/TrafficPolicy/infra/ratelimit-remote-address
  name: listener~80
  typedPerFilterConfig:
    ratelimit/infra/basic-gw-ratelimit:
      '@type': type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute
      rateLimits:
      - actions:
        - remoteAddress: {}
  virtualHosts:
  - domains:
    - example.com
    metadata:
      filterMetadata:
        merge.TrafficPolicy.gateway.kgateway.dev:
          rateLimit.global:
          - gateway.kgateway.dev/TrafficPolicy/infra/ratelimit-header
    name: listener~80~example_com
    routes:
    - match:
        pathSeparatedPrefix: /example-route
      metadata:
        filterMetadata:
          merge.TrafficPolicy.gateway.kgateway.dev:
            rateLimit.global:
            - gateway.kgateway.dev/TrafficPolicy/infra/ratelimit-path
      name: listener~80~example_com-route-0-httproute-example-route-infra-0-0-matcher-0
      route:
        cluster: kube_infra_example-svc_80
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        ratelimit/infra/basic-ratelimit:
          '@type': type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute
          rateLimits:
          - actions:
            - requestHeaders:
                descriptorKey: path
                headerName: :path
    typedPerFilterConfig:
      ratelimit/infra/section-name-gw-ratelimit:
        '@type': type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute
        rateLimits:
        - actions:
          - requestHeaders:
              descriptorKey: X-User-ID
              headerName: X-User-ID
  - domains:
    - no-ratelimit.example.com
    metadata:
      filterMetadata:
        merge.TrafficPolicy.gateway.kgateway.dev:
          rateLimit.global:
          - gateway.kgateway.dev/TrafficPolicy/infra/ratelimit-multi-headers
    name: listener~80~no-ratelimit_example_com
    routes:
    - match:
        pathSeparatedPrefix: /example-route-no-ratelimit
      metadata:
        filterMetadata:
          merge.TrafficPolicy.gateway.kgateway.dev:
            rateLimit.local:
            - gateway.kgateway.dev/TrafficPolicy/infra/ratelimit-local-only
      name: listener~80~no-ratelimit_example_com-route-0-httproute-example-route-no-ratelimit-infra-0-0-matcher-0
      route:
        cluster: kube_infra_example-svc_80
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        ratelimit/local:
          '@type': type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
          filterEnabled:
            defaultValue:
              numerator: 100
            runtimeKey: local_rate_limit_enabled
          filterEnforced:
            defaultValue:
              numerator: 100
            runtimeKey: local_rate_limit_enforced
          statPrefix: http_local_rate_limiter
          tokenBucket:
            fillInterval: 1s
            maxTokens: 10
            tokensPerFill: 2
    typedPerFilterConfig:
      ratelimit/infra/basic-gw-ratelimit:
        '@type': type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute
        rateLimits:
        - actions:
          - requestHeaders:
              descriptorKey: X-User-ID
              headerName: X-User-ID
          - requestHeaders:
              descriptorKey: X-API-Version
              headerName: X-API-Version
          - requestHeaders:
              descriptorKey: X-Client-Type
              headerName: X-Client-Type
