Addresses:
- service:
    hostname: mcp-svc.default.svc.cluster.local
    name: mcp-svc
    namespace: default
    ports:
    - servicePort: 80
Backends:
- ai:
    providerGroups:
    - providers:
      - name: openai
        openai:
          model: gpt-4o
      - anthropic:
          model: claude-3-opus-20240229
        name: anthropic
  name: default/ai-groups
- ai:
    providerGroups:
    - providers:
      - anthropic:
          model: claude-3-opus-20240229
        name: backend
  name: default/anthropic-single
- mcp:
    targets:
    - backend:
        backend: default/mcp-backend/mcp-static
        port: 8000
      name: mcp-static
      protocol: STREAMABLE_HTTP
    - backend:
        port: 80
        service: default/mcp-svc.default.svc.cluster.local
      name: mcp-svc-80
      path: /test
      protocol: STREAMABLE_HTTP
  name: default/mcp-backend
- name: default/mcp-backend/mcp-static
  static:
    host: mcp-app.foo
    port: 8000
- ai:
    providerGroups:
    - providers:
      - name: backend
        openai:
          model: gpt-4o
  name: default/openai-single
Binds:
- key: 80/default/example-gateway
  port: 80
Listeners:
- bindKey: 80/default/example-gateway
  gatewayName: default/example-gateway
  key: default/example-gateway.http
  name: http
  protocol: HTTP
Policies:
- name: auth-default/ai-groups-anthropic
  spec:
    auth:
      key:
        secret: sk-anthropic-primary
  target:
    subBackend: default/ai-groups/anthropic
- name: auth-default/anthropic-single-backend
  spec:
    auth:
      key:
        secret: sk-anthropic-primary
  target:
    subBackend: default/anthropic-single/backend
- name: default/ai-tls-all-groups:0:backendtls
  spec:
    backendTls:
      hostname: baz
  target:
    backend: default/ai-groups
- name: default/ai-tls:0:backendtls
  spec:
    backendTls:
      hostname: foo
  target:
    subBackend: default/ai-groups/anthropic
- name: default/ai-tls:1:backendtls
  spec:
    backendTls:
      hostname: foo
  target:
    subBackend: default/openai-single/backend
- name: default/mcp-tls-ca-cert:0:backendtls
  spec:
    backendTls:
      hostname: mcp-svc.foo
      root: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQuLi4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRS4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  target:
    service: default/mcp-svc.default.svc.cluster.local
- name: default/mcp-tls-system-cert:0:backendtls
  spec:
    backendTls:
      hostname: mcp-app.foo
  target:
    backend: default/mcp-backend/mcp-static
- name: default/mcp-tls-system-cert:1:backendtls
  spec:
    backendTls:
      hostname: mcp-app.foo
  target:
    backend: service/default/mcp-svc.default.svc.cluster.local:80
Routes:
- backends:
  - backend:
      backend: default/mcp-backend
    weight: 1
  hostnames:
  - example.com
  key: default/example-route.0.0.http
  listenerKey: default/example-gateway.http
  matches:
  - path:
      pathPrefix: /mcp-backend
  routeName: default/example-route
- backends:
  - backend:
      port: 80
      service: default/mcp-svc.default.svc.cluster.local
    weight: 1
  hostnames:
  - example.com
  key: default/example-route.1.0.http
  listenerKey: default/example-gateway.http
  matches:
  - path:
      pathPrefix: /mcp-svc
  routeName: default/example-route
- backends:
  - backend:
      backend: default/ai-groups
    weight: 1
  hostnames:
  - example.com
  key: default/example-route.2.0.http
  listenerKey: default/example-gateway.http
  matches:
  - path:
      pathPrefix: /ai-groups
  routeName: default/example-route
- backends:
  - backend:
      backend: default/openai-single
    weight: 1
  hostnames:
  - example.com
  key: default/example-route.3.0.http
  listenerKey: default/example-gateway.http
  matches:
  - path:
      pathPrefix: /openai-single
  routeName: default/example-route
