// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: plugins/faultinjection/fault.proto

package faultinjection // import "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/plugins/faultinjection"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/gogo/protobuf/types"
import _ "github.com/lyft/protoc-gen-validate/validate"

import time "time"

import bytes "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type RouteAbort struct {
	// Percentage of requests that should be aborted, defaulting to 0.
	// This should be a value between 0.0 and 100.0, with up to 6 significant digits.
	Percentage float32 `protobuf:"fixed32,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	// This should be a standard HTTP status, i.e. 503. Defaults to 0.
	HttpStatus           uint32   `protobuf:"varint,2,opt,name=http_status,json=httpStatus,proto3" json:"http_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteAbort) Reset()         { *m = RouteAbort{} }
func (m *RouteAbort) String() string { return proto.CompactTextString(m) }
func (*RouteAbort) ProtoMessage()    {}
func (*RouteAbort) Descriptor() ([]byte, []int) {
	return fileDescriptor_fault_2094dae7d9468ae2, []int{0}
}
func (m *RouteAbort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteAbort.Unmarshal(m, b)
}
func (m *RouteAbort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteAbort.Marshal(b, m, deterministic)
}
func (dst *RouteAbort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteAbort.Merge(dst, src)
}
func (m *RouteAbort) XXX_Size() int {
	return xxx_messageInfo_RouteAbort.Size(m)
}
func (m *RouteAbort) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteAbort.DiscardUnknown(m)
}

var xxx_messageInfo_RouteAbort proto.InternalMessageInfo

func (m *RouteAbort) GetPercentage() float32 {
	if m != nil {
		return m.Percentage
	}
	return 0
}

func (m *RouteAbort) GetHttpStatus() uint32 {
	if m != nil {
		return m.HttpStatus
	}
	return 0
}

type RouteDelay struct {
	// Percentage of requests that should be delayed, defaulting to 0.
	// This should be a value between 0.0 and 100.0, with up to 6 significant digits.
	Percentage float32 `protobuf:"fixed32,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	// Fixed delay, defaulting to 0.
	FixedDelay           *time.Duration `protobuf:"bytes,2,opt,name=fixed_delay,json=fixedDelay,stdduration" json:"fixed_delay,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RouteDelay) Reset()         { *m = RouteDelay{} }
func (m *RouteDelay) String() string { return proto.CompactTextString(m) }
func (*RouteDelay) ProtoMessage()    {}
func (*RouteDelay) Descriptor() ([]byte, []int) {
	return fileDescriptor_fault_2094dae7d9468ae2, []int{1}
}
func (m *RouteDelay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteDelay.Unmarshal(m, b)
}
func (m *RouteDelay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteDelay.Marshal(b, m, deterministic)
}
func (dst *RouteDelay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteDelay.Merge(dst, src)
}
func (m *RouteDelay) XXX_Size() int {
	return xxx_messageInfo_RouteDelay.Size(m)
}
func (m *RouteDelay) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteDelay.DiscardUnknown(m)
}

var xxx_messageInfo_RouteDelay proto.InternalMessageInfo

func (m *RouteDelay) GetPercentage() float32 {
	if m != nil {
		return m.Percentage
	}
	return 0
}

func (m *RouteDelay) GetFixedDelay() *time.Duration {
	if m != nil {
		return m.FixedDelay
	}
	return nil
}

type RouteFaults struct {
	Abort                *RouteAbort `protobuf:"bytes,1,opt,name=abort" json:"abort,omitempty"`
	Delay                *RouteDelay `protobuf:"bytes,2,opt,name=delay" json:"delay,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RouteFaults) Reset()         { *m = RouteFaults{} }
func (m *RouteFaults) String() string { return proto.CompactTextString(m) }
func (*RouteFaults) ProtoMessage()    {}
func (*RouteFaults) Descriptor() ([]byte, []int) {
	return fileDescriptor_fault_2094dae7d9468ae2, []int{2}
}
func (m *RouteFaults) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteFaults.Unmarshal(m, b)
}
func (m *RouteFaults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteFaults.Marshal(b, m, deterministic)
}
func (dst *RouteFaults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteFaults.Merge(dst, src)
}
func (m *RouteFaults) XXX_Size() int {
	return xxx_messageInfo_RouteFaults.Size(m)
}
func (m *RouteFaults) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteFaults.DiscardUnknown(m)
}

var xxx_messageInfo_RouteFaults proto.InternalMessageInfo

func (m *RouteFaults) GetAbort() *RouteAbort {
	if m != nil {
		return m.Abort
	}
	return nil
}

func (m *RouteFaults) GetDelay() *RouteDelay {
	if m != nil {
		return m.Delay
	}
	return nil
}

func init() {
	proto.RegisterType((*RouteAbort)(nil), "fault.plugins.gloo.solo.io.RouteAbort")
	proto.RegisterType((*RouteDelay)(nil), "fault.plugins.gloo.solo.io.RouteDelay")
	proto.RegisterType((*RouteFaults)(nil), "fault.plugins.gloo.solo.io.RouteFaults")
}
func (this *RouteAbort) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RouteAbort)
	if !ok {
		that2, ok := that.(RouteAbort)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Percentage != that1.Percentage {
		return false
	}
	if this.HttpStatus != that1.HttpStatus {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *RouteDelay) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RouteDelay)
	if !ok {
		that2, ok := that.(RouteDelay)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Percentage != that1.Percentage {
		return false
	}
	if this.FixedDelay != nil && that1.FixedDelay != nil {
		if *this.FixedDelay != *that1.FixedDelay {
			return false
		}
	} else if this.FixedDelay != nil {
		return false
	} else if that1.FixedDelay != nil {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *RouteFaults) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RouteFaults)
	if !ok {
		that2, ok := that.(RouteFaults)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Abort.Equal(that1.Abort) {
		return false
	}
	if !this.Delay.Equal(that1.Delay) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}

func init() {
	proto.RegisterFile("plugins/faultinjection/fault.proto", fileDescriptor_fault_2094dae7d9468ae2)
}

var fileDescriptor_fault_2094dae7d9468ae2 = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xc1, 0x4a, 0x2b, 0x31,
	0x14, 0x7d, 0xe9, 0xa3, 0x2e, 0x32, 0xe8, 0x62, 0x10, 0xac, 0x5d, 0xb4, 0x65, 0x16, 0x52, 0x04,
	0x13, 0xac, 0x5b, 0x37, 0x96, 0xa2, 0x20, 0x74, 0x33, 0xee, 0xdc, 0x94, 0x4c, 0x27, 0x93, 0x46,
	0xe3, 0xdc, 0x61, 0x92, 0x94, 0xfa, 0x09, 0xfe, 0x81, 0x9f, 0x20, 0x7e, 0x82, 0x2b, 0xff, 0x44,
	0x70, 0xe7, 0x5f, 0x48, 0x92, 0x29, 0x76, 0xa1, 0x74, 0x77, 0xef, 0x9d, 0x73, 0xce, 0xcd, 0x39,
	0x77, 0x70, 0x52, 0x29, 0x2b, 0x64, 0xa9, 0x69, 0xc1, 0xac, 0x32, 0xb2, 0xbc, 0xe3, 0x73, 0x23,
	0xa1, 0x0c, 0x2d, 0xa9, 0x6a, 0x30, 0x10, 0x77, 0x9b, 0x26, 0x20, 0x89, 0x50, 0x00, 0x44, 0x83,
	0x02, 0x22, 0xa1, 0xdb, 0x13, 0x00, 0x42, 0x71, 0xea, 0x91, 0x99, 0x2d, 0x68, 0x6e, 0x6b, 0xe6,
	0x14, 0x02, 0xb7, 0x7b, 0xb0, 0x64, 0x4a, 0xe6, 0xcc, 0x70, 0xba, 0x2e, 0x9a, 0x0f, 0xfb, 0x02,
	0x04, 0xf8, 0x92, 0xba, 0x2a, 0x4c, 0x93, 0x29, 0xc6, 0x29, 0x58, 0xc3, 0x2f, 0x32, 0xa8, 0x4d,
	0xdc, 0xc3, 0xb8, 0xe2, 0xf5, 0x9c, 0x97, 0x86, 0x09, 0xde, 0x41, 0x03, 0x34, 0x6c, 0xa5, 0x1b,
	0x93, 0xb8, 0x8f, 0xa3, 0x85, 0x31, 0xd5, 0x4c, 0x1b, 0x66, 0xac, 0xee, 0xb4, 0x06, 0x68, 0xb8,
	0x9b, 0x62, 0x37, 0xba, 0xf1, 0x93, 0x64, 0xd5, 0xc8, 0x4d, 0xb8, 0x62, 0x8f, 0x5b, 0xe5, 0xae,
	0x71, 0x54, 0xc8, 0x15, 0xcf, 0x67, 0xb9, 0x83, 0x7b, 0xb9, 0x68, 0x74, 0x48, 0x82, 0x43, 0xb2,
	0x76, 0x48, 0x26, 0x8d, 0xc3, 0xf1, 0xde, 0xf3, 0x47, 0x1f, 0xbd, 0x7d, 0xbd, 0xff, 0x6f, 0xbf,
	0xa2, 0xd6, 0xf1, 0xbf, 0x14, 0x7b, 0xb6, 0xdf, 0x95, 0x3c, 0x21, 0x1c, 0xf9, 0xd5, 0x97, 0x2e,
	0x3b, 0x1d, 0x9f, 0xe3, 0x36, 0x73, 0x9e, 0xfc, 0xda, 0x68, 0x74, 0x44, 0xfe, 0xce, 0x94, 0xfc,
	0x24, 0x90, 0x06, 0x92, 0x63, 0x6f, 0xbe, 0x69, 0x3b, 0xdb, 0x3f, 0x22, 0x0d, 0xa4, 0xf1, 0xf4,
	0xe5, 0xb3, 0x87, 0x6e, 0xaf, 0x84, 0x34, 0x0b, 0x9b, 0x91, 0x39, 0x3c, 0x50, 0x87, 0x3d, 0x91,
	0x40, 0x1d, 0xd1, 0x9d, 0xce, 0x5d, 0x5d, 0x37, 0xdd, 0xbd, 0xa0, 0xac, 0x92, 0x74, 0x79, 0x4a,
	0x7f, 0xff, 0x35, 0xb2, 0x1d, 0x9f, 0xc4, 0xd9, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf3, 0xe2,
	0x66, 0xff, 0x3b, 0x02, 0x00, 0x00,
}
